on:
  push:
     branches:
       - main
     paths:
       - pres-fr/**
       - .github/workflows/deploy_pres-fr.yml

  repository_dispatch:
    types: [pong_presentation]

name: render-presentation-fr

jobs:
  repository-dispatch-received:
    name: Dispatch received - starting all jobs here
    runs-on: ubuntu-latest
    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"

      - name: Acknowledge - dispatch response to received pong
        if: github.event.action == 'pong_presentation'
        run: |
          curl -X POST https://api.github.com/repos/QCBSRworkshops/templateWorkshops/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "acknowledged_presentation_en", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'

  presentation-fr-job:
    name: Render the presentation for this workshop
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    defaults:
      run:
        working-directory: pres-fr

    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v3

      - name: 💻 Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2.2'

      - name: 💻 Install pandoc and pandoc citeproc
        uses: r-lib/actions/setup-pandoc@v2
        
        - name: Install cURL Headers
        run: |
          sudo apt-get install -y libcurl4-openssl-dev

      - name: 💻 Install R packages and dependencies if needed
        run: |
          Rscript -e 'list.of.packages <- c("rmarkdown", "xaringan", "remotes", "stringi");
          new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])];
          if(length(new.packages) > 0) {
          install.packages(new.packages, dependencies = TRUE)
          print(paste0("The following package was installed:", new.packages))} else
          if(length(new.packages) == 0) {
          print("All packages have been previously installed and fetched from cache.")}'

      - name: Install stringi from source
        run: Rscript -e 'install.packages("stringi", type="source")'

      - name: 🧶 Render presentation
        run: Rscript -e 'rmarkdown::render("workshop06-pres-fr.Rmd")'

      - name: 🔺 Upload artifact containing the presentation
        uses: actions/upload-artifact@v1
        with:
          name: pres-fr
          path: pres-fr/

# Need to first create an empty gh-pages branch
# see https://pkgdown.r-lib.org/reference/deploy_site_github.html
# and also add secrets for an ACCESS_TOKEN

  checkout-and-deploy:
   name: Checkout and deploy the presentation within the gh-pages repository
   runs-on: ubuntu-latest
   needs: presentation-fr-job

   steps:
      - name: 🛎️ Checkout again
        uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: 🔻 Download artifact containing the presentation
        uses: actions/download-artifact@v1
        with:
         # Artifact name
         name: pres-fr # optional
         # Destination path
         path: pres-fr/ # optional

      - name: 💎 Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: pres-fr/
          target-folder: pres-fr # The folder the action should deploy
          clean: true
